name: CI/CD Pipeline (Test/Build + Merge)

on:
  push:
    branches: [dev]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: medilink
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: yahia@14
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          
      - name: Build and Test J2EE Application
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/medilink
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: yahia@14
        run: mvn clean verify

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          
      - name: Install and Build Frontend
        working-directory: medi_front
        run: |
          npm install
          npm run build

  merge-to-main:
    name: Merge Dev â†’ Main
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Merge and Push
        run: |
          git checkout main
          git merge dev --no-edit
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
