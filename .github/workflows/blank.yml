name: Medilink CI/CD Pipeline

on:
  push:
    branches: [ "dev" ]
    paths:
      - 'src/**'              # Java backend files
      - 'medi_front/**'       # React frontend files

jobs:
  test-and-build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[backend]') || true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('src/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build and Test Backend
        working-directory: src
        run: mvn clean package

  test-and-build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[frontend]') || true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: medi_front/package-lock.json

      - name: Install Dependencies & Build
        working-directory: medi_front
        run: |
          npm ci
          npm run build

  deploy-to-main:
    name: Auto-Merge Dev â†’ Main
    needs: [test-and-build-backend, test-and-build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Merge dev into main
        run: |
          git fetch origin main
          git checkout main
          git merge dev --no-edit
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
